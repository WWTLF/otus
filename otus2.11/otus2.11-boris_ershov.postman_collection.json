{
	"info": {
		"_postman_id": "b2da1a4f-1058-4184-86c1-2f4fd0dd0af1",
		"name": "otus2.11/boris_ershov",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "STEP 0.  Get Access Token for Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9e37659-9b22-42e5-b6f7-ecc892295f8b",
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set('admin_access_token', responseJSON['access_token'])",
							"var user1 = \"user\" + _.random(50, 10000)",
							"pm.collectionVariables.set('User1', user1)",
							"pm.collectionVariables.set('Password1', _.random(50, 10000))",
							"",
							"var user2 = \"user\" + _.random(50, 10000)",
							"pm.collectionVariables.set('User2', user2)",
							"pm.collectionVariables.set('Password2', _.random(50, 10000))",
							"",
							"pm.test(\"Получение access_token администоратора\", ()=>{",
							"    pm.expect(pm.response.text()).to.include(\"access_token\");    ",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "admin-cli",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "Admin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{BaseURL}}/auth/realms/master/protocol/openid-connect/token",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"auth",
						"realms",
						"master",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 1.  Регистрация первого пользователя в keycloak",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81d96225-3ba8-4190-9741-aedd97e4ea28",
						"exec": [
							"user1 = pm.collectionVariables.get(\"User1\")",
							"pm.test(\"Пользователь зарегистрирован \" + user1, () => {",
							"  pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"{{User1}}\",\n    \"lastName\":\"{{User1}}\", \n    \"email\":\"{{User1}}@test.com\", \n    \"enabled\":\"true\", \n    \"username\":\"{{User1}}\", \n    \"emailVerified\":\"true\",\n    \"credentials\":[{\"type\":\"password\",\"value\":\"{{Password1}}\",\"temporary\":false}]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/auth/admin/realms/portfolio/users",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"portfolio",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.  Регистрация второго пользователя в keycloak",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "407f0252-faf0-42e0-8b8a-077d7c6ccd9e",
						"exec": [
							"user2 = pm.collectionVariables.get(\"User2\")",
							"pm.test(\"Пользователь зарегистрирован \" + user2, () => {",
							"  pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"{{User2}}\",\n    \"lastName\":\"{{User2}}\", \n    \"email\":\"{{User2}}@test.com\", \n    \"enabled\":\"true\", \n    \"username\":\"{{User2}}\", \n    \"emailVerified\":\"true\",\n    \"credentials\":[{\"type\":\"password\",\"value\":\"{{Password2}}\",\"temporary\":false}]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/auth/admin/realms/portfolio/users",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"auth",
						"admin",
						"realms",
						"portfolio",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "STEP 3.  Получение токена по паролю для первого пользователя (implicit flow)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78774ed0-35ac-49cd-a13d-4db372e1bfaa",
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set('access_token', responseJSON['access_token'])",
							"user1 = pm.collectionVariables.get(\"User1\")",
							"pm.test(\"Получение access_token для \" + user1, ()=>{",
							"    pm.expect(pm.response.text()).to.include(\"access_token\");    ",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "frontend",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "31fc5171-4500-4050-863b-2dba1b793e28",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid profile email",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{User1}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{Password1}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{BaseURL}}/auth/realms/portfolio/protocol/openid-connect/token",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"auth",
						"realms",
						"portfolio",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "STEP 4. Проверка авторизации по токену для пользователя 1 в главном приложении",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78396353-796e-4b7c-8040-c99c2f74bda5",
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"user1 = pm.collectionVariables.get(\"User1\")",
							"pm.collectionVariables.set('sub1', responseJSON['sub'])",
							"pm.test(\"Пользователь \" + user1 + \" успешно авторизован по токену\", ()=>{",
							"    pm.expect(responseJSON['email']).to.eql(user1 + \"@test.com\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"followRedirects": false
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{access_token}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/profile/api/v1/login",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"profile",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 5. Создание пустого инвестиционного портфеля для пользователя 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8e2bc9f-d38a-429a-ab19-768b94145cf5",
						"exec": [
							"user1 = pm.collectionVariables.get(\"User1\")",
							"",
							"pm.test(\"Ивестиционный портфель \"+ user1 +\" создан\", () => {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"PortfolioID1\", responseJSON['id'])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"RRR\": \"MAX_RETURN\",\n\"amount\": 0,\n\"autoFlag\": false,\n\"broker\": \"string\",\n\"name\": \"{{User1}}p6\",\n\"period\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/profile/api/v1/portfolios",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"profile",
						"api",
						"v1",
						"portfolios"
					]
				}
			},
			"response": []
		},
		{
			"name": "STEP 6. Получение своего портфеля по id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "405d8f8a-8c93-49c5-b483-781cc1446f61",
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"var envPortfolioID = pm.collectionVariables.get('PortfolioID1')",
							"var envSub1 = pm.collectionVariables.get('sub1')",
							"pm.test(\"Проверка принадлежности созданного партфеля пользователю\", () => {",
							"  pm.response.to.have.status(200);",
							"  pm.expect(envSub1).to.eql(responseJSON['user_id'])",
							"});",
							"",
							"",
							"pm.test(\"Проверка совпадения запрашиваемого и возвращаемого id портфеля\", () => {",
							"  pm.expect(envPortfolioID).to.eql(responseJSON['id'])",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/profile/api/v1/portfolios/{{PortfolioID1}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"profile",
						"api",
						"v1",
						"portfolios",
						"{{PortfolioID1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "STEP 7. Обновление своего портфеля по id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b2794957-5290-4e6f-a901-8bde676571e5",
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"var envPortfolioID = pm.collectionVariables.get('PortfolioID1')",
							"var envSub1 = pm.collectionVariables.get('sub1')",
							"pm.test(\"Проверка принадлежности созданного партфеля пользователю\", () => {",
							"  pm.response.to.have.status(200);",
							"  pm.expect(envSub1).to.eql(responseJSON['user_id'])",
							"});",
							"",
							"",
							"pm.test(\"Проверка совпадения запрашиваемого и возвращаемого id портфеля\", () => {",
							"  pm.expect(envPortfolioID).to.eql(responseJSON['id'])",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"RRR\": \"MAX_RETURN\",\n    \"broker\": \"string\",\n    \"created_at\": 1605887834,\n    \"id\": {{PortfolioID1}},\n    \"name\": \"{{User1}}_NEW_{{PortfolioID1}}_NAME\",\n    \"state\": \"MANUAL\",\n    \"amount\": 123.00,\n    \"user_id\": \"{{sub1}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/profile/api/v1/portfolios/{{PortfolioID1}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"profile",
						"api",
						"v1",
						"portfolios",
						"{{PortfolioID1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "STEP 8.  Получение токена по паролю для второго пользователя (implicit flow)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49ca27f6-faa1-4c4d-8b8e-e3db5acae101",
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set('access_token', responseJSON['access_token'])",
							"user2 = pm.collectionVariables.get(\"User2\")",
							"pm.test(\"Получение access_token для \" + user2, ()=>{",
							"    pm.expect(pm.response.text()).to.include(\"access_token\");    ",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "frontend",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "31fc5171-4500-4050-863b-2dba1b793e28",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid profile email",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{User2}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{Password2}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{BaseURL}}/auth/realms/portfolio/protocol/openid-connect/token",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"auth",
						"realms",
						"portfolio",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "STEP 9. Проверка авторизации по токену для пользователя 2 в главном приложении",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec5ad2e3-61b1-41e8-98b2-966badb20068",
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"user2 = pm.collectionVariables.get(\"User2\")",
							"pm.collectionVariables.set('sub2', responseJSON['sub'])",
							"pm.test(\"Пользователь \" + user2 + \" успешно авторизован по токену\", ()=>{",
							"    pm.expect(responseJSON['email']).to.eql(user2 + \"@test.com\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"followRedirects": false
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{access_token}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/profile/api/v1/login",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"profile",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "STEP 10. Обновление чужого портфеля по id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3fbdd977-f293-4af4-b59e-03856902a3f4",
						"exec": [
							"pm.test(\"Попытка обновления чужого портфеля приводит к ошибке\", () => {",
							"  pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"RRR\": \"MAX_RETURN\",\n    \"broker\": \"string\",\n    \"created_at\": 1605887834,\n    \"id\": {{PortfolioID1}},\n    \"name\": \"{{User2}}_NEW_{{PortfolioID1}}_NAME_3\",\n    \"state\": \"MANUAL\",\n    \"amount\": 123.00,\n    \"user_id\": \"{{sub2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/profile/api/v1/portfolios/{{PortfolioID1}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"profile",
						"api",
						"v1",
						"portfolios",
						"{{PortfolioID1}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"id": "bfc21d3b-1347-4dfc-9c50-befb49538501",
			"key": "BaseURL",
			"value": "http://arch.homework"
		},
		{
			"id": "96f2b871-330f-4fd8-9dc7-f1f11f98d7d9",
			"key": "access_token",
			"value": ""
		},
		{
			"id": "26ef0c9b-7258-4012-9106-4d2667286acf",
			"key": "admin_access_token",
			"value": ""
		},
		{
			"id": "fd791b5d-a0ca-4efa-9316-f957d343b558",
			"key": "Password1",
			"value": ""
		},
		{
			"id": "fef3106c-d83d-4e7a-8ec5-8a0e6ef9d2cf",
			"key": "Password2",
			"value": ""
		},
		{
			"id": "bed4145f-2833-490b-86e7-a32d303202bb",
			"key": "User1",
			"value": ""
		},
		{
			"id": "47f5049f-d31c-4980-8005-e0171753567f",
			"key": "User2",
			"value": ""
		},
		{
			"id": "2c94c192-e0ba-4aee-8599-da3c12487409",
			"key": "PortfolioID1",
			"value": ""
		},
		{
			"id": "6d72ccf6-9f0e-41e5-9f14-26b6372f3a74",
			"key": "sub1",
			"value": ""
		},
		{
			"id": "0234d776-4ed0-40be-8349-3e19baf15692",
			"key": "sub2",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}